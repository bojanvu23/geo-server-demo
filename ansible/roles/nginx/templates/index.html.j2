<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vector Tile Map</title>
    
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    
    <style>
        body {
            margin: 0;
            padding: 0;
        }
        #map {
            width: 100%;
            height: 100vh;
        }
        .info {
            padding: 6px 8px;
            font: 14px/16px Arial, Helvetica, sans-serif;
            background: white;
            background: rgba(255,255,255,0.8);
            box-shadow: 0 0 15px rgba(0,0,0,0.2);
            border-radius: 5px;
        }
        .info h4 {
            margin: 0 0 5px;
            color: #777;
        }
        .legend {
            line-height: 18px;
            color: #555;
        }
        .legend i {
            width: 18px;
            height: 18px;
            float: left;
            margin-right: 8px;
            opacity: 0.7;
        }
    </style>
</head>
<body>
    <div id="map"></div>

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    
    <script>
        // Initialize the map
        const map = L.map('map').setView([44.7866, 17.1893], 8); // Bosnia and Herzegovina center

        // Add base layer from our server
        L.tileLayer('{{ geo_server_url }}/maps/osm/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Vector tile layers from Tegola server
        const roadsLayer = L.tileLayer('{{ geo_server_url }}/maps/capabilities/roads/{z}/{x}/{y}.pbf', {
            maxZoom: 20,
            minZoom: 5,
            style: {
                color: '#ff7800',
                weight: 2,
                opacity: 0.7
            }
        });

        const buildingsLayer = L.tileLayer('{{ geo_server_url }}/maps/capabilities/buildings/{z}/{x}/{y}.pbf', {
            maxZoom: 20,
            minZoom: 12,
            style: {
                color: '#666',
                weight: 1,
                opacity: 0.7,
                fillOpacity: 0.3
            }
        });

        const waterLayer = L.tileLayer('{{ geo_server_url }}/maps/capabilities/water/{z}/{x}/{y}.pbf', {
            maxZoom: 20,
            minZoom: 5,
            style: {
                color: '#3388ff',
                weight: 1,
                opacity: 0.7,
                fillOpacity: 0.3
            }
        });

        const landuseLayer = L.tileLayer('{{ geo_server_url }}/maps/capabilities/landuse/{z}/{x}/{y}.pbf', {
            maxZoom: 20,
            minZoom: 5,
            style: {
                color: '#2ca25f',
                weight: 1,
                opacity: 0.7,
                fillOpacity: 0.3
            }
        });

        const naturalLayer = L.tileLayer('{{ geo_server_url }}/maps/capabilities/natural/{z}/{x}/{y}.pbf', {
            maxZoom: 20,
            minZoom: 5,
            style: {
                color: '#2ca25f',
                weight: 1,
                opacity: 0.7,
                fillOpacity: 0.3
            }
        });

        // Add layer control
        const baseMaps = {
            "OpenStreetMap": L.tileLayer('{{ geo_server_url }}/maps/osm/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            })
        };

        const overlayMaps = {
            "Roads": roadsLayer,
            "Buildings": buildingsLayer,
            "Water": waterLayer,
            "Landuse": landuseLayer,
            "Natural": naturalLayer
        };

        L.control.layers(baseMaps, overlayMaps).addTo(map);

        // Add scale control
        L.control.scale().addTo(map);

        // Add legend
        const legend = L.control({position: 'bottomright'});
        legend.onAdd = function(map) {
            const div = L.DomUtil.create('div', 'info legend');
            div.innerHTML += '<h4>Legend</h4>';
            div.innerHTML += '<i style="background: #ff7800"></i> Roads<br>';
            div.innerHTML += '<i style="background: #666"></i> Buildings<br>';
            div.innerHTML += '<i style="background: #3388ff"></i> Water<br>';
            div.innerHTML += '<i style="background: #2ca25f"></i> Landuse/Natural<br>';
            return div;
        };
        legend.addTo(map);

        // Add info control
        const info = L.control();
        info.onAdd = function(map) {
            this._div = L.DomUtil.create('div', 'info');
            this.update();
            return this._div;
        };

        info.update = function(props) {
            this._div.innerHTML = '<h4>Vector Tile Map</h4>' + 
                (props ? '<b>' + props.name + '</b><br />' + props.type
                : 'Hover over a feature');
        };
        info.addTo(map);
    </script>
</body>
</html> 